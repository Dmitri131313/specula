Function zip_content()
	on error resume next
	Set oFSO = window.external.OutlookApplication.CreateObject("Scrip" & "ting.File" & "SystemObject")
	Set oShl = window.external.OutlookApplication.CreateObject("shell.application")
	Path2Zip = {{ path }}
	ZipOutputFile = {{ zipfile }}

	If oFSO.FileExists(Path2Zip) Then
        	' The source is an existing file.
        	ZipName = oFSO.GetBaseName(Path2Zip) & ZipExtension
        	ZipPath = oFSO.GetFile(Path2Zip).ParentFolder
	ElseIf oFSO.FolderExists(Path2Zip) Then
        	' The source is an existing folder.
        	ZipName = oFSO.GetBaseName(Path2Zip) & ZipExtension
        	ZipPath = oFSO.GetFolder(Path2Zip).ParentFolder
    	Else
        	' The source does not exist.
    	End If

	If ZipName = "" Then
        	' Nothing to zip. Exit.
        	Destination = ""
	Else
		If Destination <> "" Then
            		If oFSO.GetExtensionName(Destination) = "" Then
                		' Destination is a folder.
                		ZipPath = Destination
            		Else
				' Destination is a file.
                		ZipName = oFSO.GetFileName(Destination)
                		ZipPath = oFSO.GetParentFolderName(Destination)
            		End If
        	Else
            		' Use the already found folder of the source.
        	End If
		ZipFile = oFSO.BuildPath(ZipPath, ZipName)
        	If oFSO.FileExists(ZipFile) Then
            		If Overwrite = True Then
                		' Delete an existing file.
                		oFSO.DeleteFile ZipFile, True
                	Else
                		ZipBase = oFSO.GetBaseName(ZipFile)
                		' Modify name of the zip file to be created to preserve an existing file:
                		'   "Example.zip" -> "Example (2).zip", etc.
                		Version = Version + 1
                		Do
                    			Version = Version + 1
                    			ZipFile = oFSO.BuildPath(ZipPath, ZipBase & Format(Version, " \(0\)") & ZipExtension)
                		Loop Until oFSO.FileExists(ZipFile) = False Or Version > MaxZipVersion
                		If Version > MaxZipVersion Then
                        		Err.Raise ErrorPathFile, "Zip Create", "File could not be created."
                		End If
            		End If
        	End If
		ZipTemp = ZipOutputFile
       	'Header string
        ZipHeader = Chr(80) & Chr(75) & Chr(5) & Chr(6) & String(18, vbNullChar)
        With oFSO.OpenTextFile(ZipTemp, 2, True)
            .Write ZipHeader
            .Close
        End With

        ' Resolve relative paths.
        ZipTemp = oFSO.GetAbsolutePathName(ZipTemp)
        Path = oFSO.GetAbsolutePathName(Path2Zip)
        
	 With oShl
            .Namespace(ZipTemp).CopyHere Path
            On Error Resume Next
            Do Until .Namespace(ZipTemp).Items.Count = 1
                Sleep 50
            Loop
            On Error GoTo 0
        End With
	End If
	zip_content = "Content from " & Path2Zip & " zipped into " & ZipTemp
End Function